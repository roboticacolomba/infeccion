<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="Y%twU3;a~2nGy?43v/bP">players</variable><variable id="5?:ML-mMK`2}oEY1hY3Y">p</variable><variable id="QRjXENQ79G,Kr?1KNa~@">q</variable><variable id="Sg^q;5I=%AI$bJ|Z0JEj">r</variable><variable id="Nmd$=#8(30q=J])M0zLq">patientZero</variable><variable id="fiCdJ|-HsXGTx@,4j50;">state</variable><variable id="7E2$XX5#mcwz)g@5?Tpu">master</variable><variable id="L7sx$%}U4uv^I6Y%1,d!">paired</variable><variable id="5-51i%Dvu|Arw0$i-9vF">signal</variable><variable id="}Kl6az*._rHQq9hyA8+A">INCUBATION</variable><variable id="$@[yn[xoi.2pyx-_PP0z">DEATH</variable><variable id="~EOb)lF6MR./){pzsR*}">RSSI</variable><variable id=")aMiIMpV]+!U~?Lh5Ogq">TRANSMISSIONPROB</variable><variable id="BB4rRf7qsD5aRvh7)1|i">playerIcons</variable><variable id="_ok8Sp=Iz*7Vr#~xvGDP">infectedBy</variable><variable id="eHxm)gg3Hwx5-GM[fxiY">playerIcon</variable></variables><comment id="/WZqXK*6(vPryUM6DXlv" x="351" y="4195" w="160" h="120">
master state
</comment><block type="device_button_event" id="RjFj,fUpxc/ca9e{[l.R" x="637" y="-36"><field name="NAME">Button.AB</field><statement name="HANDLER"><block type="controls_if" id="gQUk!ry6XM/Ba|UX{zow"><value name="IF0"><shadow type="logic_boolean" id="9n_B8_v6Tq$U9PCL2TUU"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="(t)M]98e`mc(V/CMCL-m"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean" id="]_07,t.,MCzJic~u;@w{"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="aeQivcCc`qYm2+4w#51v"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="p_HXd31G|lZn~/`-b]hj"><field name="NUM">0</field></shadow><block type="variables_get" id="j.5;O,S,Z*LO_24lK!8l"><field name="VAR" id="fiCdJ|-HsXGTx@,4j50;">state</field></block></value><value name="B"><shadow type="math_number" id="(l[I`hlV$j9fUY,Vwhsf"><field name="NUM">0</field></shadow><block type="typescript_expression" id="7dhO%GhnI3P$f}q2;5{l"><field name="EXPRESSION">GameState.Stopped</field></block></value></block></value><value name="B"><shadow type="logic_boolean" id="zk32p`6Ji71~VO5T;@7t"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="FoV1[kP+[cb`NgJ#o@BP"><value name="BOOL"><shadow type="logic_boolean" id="4Y7.BCaYv;u%(ovy#KM@"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id=")LXjuFX6?I_H]~%^34rH"><field name="VAR" id="7E2$XX5#mcwz)g@5?Tpu">master</field></block></value></block></value></block></value><statement name="DO0"><block type="variables_set" id="fA-hxlxDKVK+1YQEvu0g"><field name="VAR" id="7E2$XX5#mcwz)g@5?Tpu">master</field><value name="VALUE"><shadow type="math_number" id="Y%S9J6?COZS#-T`wAT1*"><field name="NUM">0</field></shadow><block type="logic_boolean" id="0N_{y9Gu{se~rrG,!P`k"><field name="BOOL">TRUE</field></block></value><next><block type="variables_set" id="]1+.v26oiw#y1d6LF{DN"><field name="VAR" id="L7sx$%}U4uv^I6Y%1,d!">paired</field><value name="VALUE"><shadow type="math_number" id="~A,|oTk1F-r(qcvhmHyG"><field name="NUM">0</field></shadow><block type="logic_boolean" id="[s$%a%s:cLIFKU`Ybp9j"><field name="BOOL">TRUE</field></block></value><next><block type="typescript_statement" id="]G.=7-u}6k|4=@jt[S=|"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Pairing" numlines="1"></mutation><next><block type="serial_writeline" id="rXcuiZGSI0,AgJ$CprX)"><value name="text"><shadow type="text" id="1Q*t-*?Z66}%:=PjR2ds"><field name="TEXT">registered as master</field></shadow></value><next><block type="radio_set_transmit_power" id="-I97RT-e8,17G};2|;ac"><value name="power"><shadow type="math_number_minmax" id="}uH?N8!e;9zC70xiGtln"><mutation min="0" max="7" precision="0"></mutation><field name="SLIDER">7</field></shadow></value><next><block type="device_print_message" id="C,j^R=VSNY[-G$Y)A,pV"><value name="text"><shadow type="text" id="m+hxhC2]CC5nqBul9-}L"><field name="TEXT">0</field></shadow></value><next><block type="typescript_statement" id="T79i/(XVeRK[juSYqU}N"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type="controls_if" id="GWXad!wi2AMoloYyUuNq"><value name="IF0"><shadow type="logic_boolean" id="!.AmWSUU}QYhj`pjPnaL"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="{-3jGHK89N0fXGy*z?@,"><value name="BOOL"><shadow type="logic_boolean" id="SlT9CEy-Z;|6`yg`E:97"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="Zb8bT_tKKB$GGW*70vNo"><field name="VAR" id="7E2$XX5#mcwz)g@5?Tpu">master</field></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="K6-+mz6)?=m%n)Dcgf@9"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return" numlines="1"></mutation></block></statement><next><block type="controls_if" id="p_i(2/!!J@FsT.pM[j0k"><mutation elseif="1"></mutation><value name="IF0"><shadow type="logic_boolean" id="M91WG|E^r.IiYQlnSL]/"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="~yQgQEUEr7u@a0;)NCOD"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="9d^5K!7~_@G~Qkl#M#LT"><field name="NUM">0</field></shadow><block type="variables_get" id="1Gr][xg91BhTZpz+rI7A"><field name="VAR" id="fiCdJ|-HsXGTx@,4j50;">state</field></block></value><value name="B"><shadow type="math_number" id="ml;jAsGUKf^X6w[3}bJT"><field name="NUM">0</field></shadow><block type="typescript_expression" id="+A3nf^}U$Gs[*]zD]`Yr"><field name="EXPRESSION">GameState.Pairing</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="avLDdS3$KaG6ae~mD9EU"><field name="VAR" id="Nmd$=#8(30q=J])M0zLq">patientZero</field><value name="VALUE"><shadow type="math_number" id="-L]Gy9*`x39Q.73@XV~d"><field name="NUM">0</field></shadow><block type="lists_index_get" id="iy()d}ch0|eG2Gksa|f7"><value name="LIST"><block type="variables_get" id="|ifQlD}M^N8zUY_Rwdbu"><field name="VAR" id="Y%twU3;a~2nGy?43v/bP">players</field></block></value><value name="INDEX"><shadow type="math_number" id="xbvv%j/S~haQCY$|0[MB"><field name="NUM">0</field></shadow><block type="device_random" id="!93qS_*iX~9.?GhrP`1a"><value name="min"><shadow type="math_number" id="HLT_jsu?*nveQMJebQVV"><field name="NUM">0</field></shadow></value><value name="limit"><block type="math_arithmetic" id="*:LxG3}w/_2K}dLLEEP8"><field name="OP">MINUS</field><value name="A"><shadow type="math_number" id="c2wt{~;gjoV!|Vd_pGaC"><field name="NUM">0</field></shadow><block type="lists_length" id="XWst_)dgYQpO!hFP0!y9"><value name="VALUE"><block type="variables_get" id="a$fhO#(B#k+zS_otR1]D"><field name="VAR" id="Y%twU3;a~2nGy?43v/bP">players</field></block></value></block></value><value name="B"><shadow type="math_number" id="?l%qls]a(2P,@}Sd5}}*"><field name="NUM">1</field></shadow></value></block></value></block></value></block></value><next><block type="typescript_statement" id="Zp!B,%;JnWmYsKV:Ye0w"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Infecting" numlines="1"></mutation><next><block type="serial_writeline" id="aDI,XcaYb^/?0a.$[CJG"><value name="text"><block type="typescript_expression" id=";:qM`V5#f~?xdCP_0?BD"><field name="EXPRESSION">`game started ${players.length} players`</field></block></value></block></next></block></next></block></statement><value name="IF1"><shadow type="logic_boolean" id="_Ib[Pn)4)5TBhoXP]6y("><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="sSNQH/:7gpkj~TK11*bR"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="Nvhz!Uqf;]Qty?nG|M:Z"><field name="NUM">0</field></shadow><block type="variables_get" id="1!p0u[.ycf)|aFE=|d[L"><field name="VAR" id="fiCdJ|-HsXGTx@,4j50;">state</field></block></value><value name="B"><shadow type="math_number" id="+bsEXk`P}VqY#zAwQ=pI"><field name="NUM">0</field></shadow><block type="typescript_expression" id="N(OZlXx_iBidBdz)iviL"><field name="EXPRESSION">GameState.Running</field></block></value></block></value><statement name="DO1"><block type="function_call" id="x:xDLz)x]??NkDGV8[IF"><mutation name="gameOver" functionid="#nyG=ve56/eZf59:S$W-"></mutation></block></statement></block></next></block></next></block></statement></block><block type="pxt-on-start" id="`$~_Ia_K)S:A-8S6,lLO" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="s]4ShO))G~PJerb/!;[9"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let infectedTime = 0" numlines="1" declaredvars="infectedTime"></mutation><comment pinned="false" h="80" w="160">local time when infection happened</comment><next><block type="typescript_statement" id="E^Qd*f/drlFI?/A0YCQf"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let paired = false" numlines="1" declaredvars="paired"></mutation><comment pinned="false" h="80" w="160">player state</comment><next><block type="typescript_statement" id="@eG{p~fxbfr(D}`#ou@m"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let players: Player[] = []" numlines="1" declaredvars="players"></mutation><next><block type="variables_set" id="JGPhK5A$qm8PALnMG`vV"><field name="VAR" id="}Kl6az*._rHQq9hyA8+A">INCUBATION</field><comment pinned="false" h="80" w="160">time before showing symptoms</comment><data>0</data><value name="VALUE"><shadow type="math_number" id="Mxp/f#wGwe;v)v(YjRp."><field name="NUM">20000</field></shadow></value><next><block type="variables_set" id="yPil*x6qhEV{gh:+kUmo"><field name="VAR" id="$@[yn[xoi.2pyx-_PP0z">DEATH</field><comment pinned="false" h="80" w="160">time before dying off the disease</comment><value name="VALUE"><shadow type="math_number" id="xKXL|MGX!4kXsfb(@XXz"><field name="NUM">40000</field></shadow></value><next><block type="variables_set" id="B6i20E:9N]n,.^gW-sZ8"><field name="VAR" id="~EOb)lF6MR./){pzsR*}">RSSI</field><comment pinned="false" h="80" w="160">db</comment><value name="VALUE"><shadow type="math_number" id="1*4rhvFEy{_AaywyR}c:"><field name="NUM">-45</field></shadow></value><next><block type="variables_set" id=",lmiQ~/JA$r!k=1$^rd5"><field name="VAR" id=")aMiIMpV]+!U~?Lh5Ogq">TRANSMISSIONPROB</field><comment pinned="false" h="80" w="160">% probability to transfer disease</comment><value name="VALUE"><shadow type="math_number" id="O54.aa,KFe92EVRD{gmT"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="}%T14:/5+!E^h%%kqjGi"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum GameState {" line1="    Stopped," line2="    Pairing," line3="    Infecting," line4="    Running," line5="    Over" line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="B5`y~J8~v*|fCbEI9S(6"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum HealthState {" line1="    Healthy," line2="    Incubating," line3="    Sick," line4="    Dead" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="8h9Xb]W`2:Ff(5DdaN#-"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum MessageKind {" line1="    PairRequest," line2="    PairConfirmation," line3="    HealthSet," line4="    HealthValue," line5="    InitialInfect," line6="    TransmitVirus," line7="    GameState" line8="}" numlines="9"></mutation><next><block type="typescript_statement" id="+,Lp=-m0a@e*NG,2ix_$"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const GameIcons = {" line1="    Pairing: IconNames.Ghost," line2="    Paired: IconNames.Happy," line3="    Dead: IconNames.Skull," line4="    Sick: IconNames.Sad," line5="    Incubating: IconNames.Confused," line6="    Healthy: IconNames.Happy" line7="}" numlines="8" declaredvars="GameIcons"></mutation><next><block type="typescript_statement" id="J+)E(.4/(%IPu=AGvt(g"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Message {" line1="" line2="    private _data: Buffer" line3="" line4="    constructor(input?: Buffer) {" line5="        this._data = input || control.createBuffer(13)" line6="    }" line7="" line8="    get kind(): number {" line9="        return this._data.getNumber(NumberFormat.Int8LE, 0)" line10="    }" line11="" line12="    set kind(x: number) {" line13="        this._data.setNumber(NumberFormat.Int8LE, 0, x)" line14="    }" line15="" line16="    get fromSerialNumber(): number {" line17="        return this._data.getNumber(NumberFormat.Int32LE, 1)" line18="    }" line19="" line20="    set fromSerialNumber(x: number) {" line21="        this._data.setNumber(NumberFormat.Int32LE, 1, x)" line22="    }" line23="" line24="    get value(): number {" line25="        return this._data.getNumber(NumberFormat.Int32LE, 5)" line26="    }" line27="" line28="    set value(x: number) {" line29="        this._data.setNumber(NumberFormat.Int32LE, 5, x)" line30="    }" line31="" line32="    get toSerialNumber(): number {" line33="        return this._data.getNumber(NumberFormat.Int32LE, 9)" line34="    }" line35="" line36="    set toSerialNumber(x: number) {" line37="        this._data.setNumber(NumberFormat.Int32LE, 9, x)" line38="    }" line39="" line40="    send() {" line41="        radio.sendBuffer(this._data)" line42="        basic.pause(250)" line43="    }" line44="}" numlines="45"></mutation><next><block type="variables_set" id=":6*U.{Qt/x#q*5I+Q..*"><field name="VAR" id="BB4rRf7qsD5aRvh7)1|i">playerIcons</field><value name="VALUE"><shadow type="math_number" id="wT[w2f:ij7#C?^$XN:5I"><field name="NUM">0</field></shadow><block type="text" id="IZ!~]2VnCB!|Qx*v2I4M"><field name="TEXT">ABCDEFGHIJKLMNOPQRSTUVWXYZ</field></block></value><next><block type="typescript_statement" id="tds}jIbhcG0Mbk=cmhqV"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Player {" line1="    id: number" line2="    icon: number" line3="    health: HealthState" line4="    show() {" line5="        basic.showString(playerIcons[this.icon])" line6="    }" line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="(gQS{keohu]NH7oblA?S"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let state = GameState.Stopped" numlines="1" declaredvars="state"></mutation><next><block type="typescript_statement" id="8j/jENYeJ!M(f7~0doKR"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let patientZero: Player" numlines="1" declaredvars="patientZero"></mutation><next><block type="variables_set" id="o:Rnb!:KIJ24V}N3IHBw"><field name="VAR" id="_ok8Sp=Iz*7Vr#~xvGDP">infectedBy</field><comment pinned="false" h="80" w="160">who infected (playerIcon)</comment><value name="VALUE"><shadow type="math_number" id="-Vd~X]u*qNHyx]Z)hb_n"><field name="NUM">-1</field></shadow></value><next><block type="variables_set" id="9PK@IG5Qh{D:%_HW5dJe"><field name="VAR" id="eHxm)gg3Hwx5-GM[fxiY">playerIcon</field><comment pinned="false" h="80" w="160">player icon and identity</comment><value name="VALUE"><shadow type="math_number" id="(j$^^B%bc|QEKc/uExd%"><field name="NUM">-1</field></shadow></value><next><block type="typescript_statement" id="nouqNPk.CXc.r2/58:W;"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let health = HealthState.Healthy" numlines="1" declaredvars="health"></mutation><next><block type="radio_set_group" id="z%~Nz%m}{+l4p3^d^NJ2"><value name="ID"><shadow type="math_number_minmax" id="goC*#4udm%GbbX5[:|0("><mutation min="0" max="255" precision="0"></mutation><field name="SLIDER">42</field></shadow></value><next><block type="typescript_statement" id="y#8++|%ArnDM_.yOS;,4"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="basic.showIcon(GameIcons.Pairing)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="device_forever" id="CRJTOnE13NzAQQD^q}@6" x="1970" y="-36"><statement name="HANDLER"><block type="typescript_statement" id="5c)k]amPoS%?j9zgk|g5"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let message: Message" numlines="1" declaredvars="message"></mutation><next><block type="controls_if" id="-,}|@t;KVk0-q^`K(VRe"><mutation else="1"></mutation><value name="IF0"><shadow type="logic_boolean" id="6*.^@07}6-Y(S]d0LW5W"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="[k(sa4~iyE#_aNKF`2[3"><field name="VAR" id="7E2$XX5#mcwz)g@5?Tpu">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="^}!=t|RN(3M`CSX_uQ0`"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // tell each player they are registered" line3="                for (const t of players) {" line4="                    message = new Message()" line5="                    message.kind = MessageKind.PairConfirmation" line6="                    message.value = t.icon" line7="                    message.toSerialNumber = t.id" line8="                    message.send()" line9="                }" line10="                serial.writeLine(`pairing ${players.length} players`)" line11="                basic.pause(500)" line12="                break" line13="            case GameState.Infecting:" line14="                if (patientZero.health == HealthState.Healthy) {" line15="                    message = new Message()" line16="                    message.kind = MessageKind.InitialInfect" line17="                    message.toSerialNumber = patientZero.id" line18="                    message.send()" line19="                    basic.pause(100)" line20="                } else {" line21="                    serial.writeLine(`patient ${patientZero.id} infected`)" line22="                    // show startup" line23="                    basic.showIcon(GameIcons.Dead)" line24="                    state = GameState.Running" line25="                }" line26="                break" line27="            case GameState.Running:" line28="                for (const u of players) {" line29="                    message = new Message()" line30="                    message.kind = MessageKind.HealthSet" line31="                    message.value = u.health" line32="                    message.toSerialNumber = u.id" line33="                    message.send()" line34="                }" line35="                break" line36="            case GameState.Over:" line37="                if (patientZero)" line38="                    patientZero.show()" line39="                break" line40="        }" numlines="41"></mutation><next><block type="typescript_statement" id=",K_hkC(91.j}r8dZktgc"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message = new Message()" numlines="1"></mutation><next><block type="typescript_statement" id=")UfVW#JHU0L%NqYSaEU3"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.kind = MessageKind.GameState" numlines="1"></mutation><next><block type="typescript_statement" id="IRnTvo?31OjY_c=0]!c("><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.value = state" numlines="1"></mutation><next><block type="typescript_statement" id="i@(/K*b4R([IE#y4Oz_{"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.send()" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></statement><statement name="ELSE"><block type="typescript_statement" id="(/M4]X6(mrfTDcveN`hj"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // broadcast player id" line3="                if (playerIcon &lt; 0) {" line4="                    message = new Message()" line5="                    message.kind = MessageKind.PairRequest" line6="                    message.fromSerialNumber = control.deviceSerialNumber()" line7="                    message.send()" line8="                } else if (infectedBy &gt; -1) {" line9="                    message = new Message()" line10="                    message.kind = MessageKind.HealthValue" line11="                    message.fromSerialNumber = control.deviceSerialNumber()" line12="                    message.value = health" line13="                    message.send()" line14="                }" line15="                break" line16="            case GameState.Infecting:" line17="                message = new Message()" line18="                message.kind = MessageKind.HealthValue" line19="                message.fromSerialNumber = control.deviceSerialNumber()" line20="                message.value = health" line21="                message.send()" line22="                break" line23="            case GameState.Running:" line24="                // update health status" line25="                if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; DEATH)" line26="                    health = HealthState.Dead" line27="                else if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; INCUBATION)" line28="                    health = HealthState.Sick" line29="                // transmit disease" line30="                if (health == HealthState.Incubating || health == HealthState.Sick) {" line31="                    message = new Message()" line32="                    message.kind = MessageKind.TransmitVirus" line33="                    message.fromSerialNumber = control.deviceSerialNumber()" line34="                    message.value = playerIcon" line35="                    message.send()" line36="                }" line37="                message = new Message()" line38="                message.kind = MessageKind.HealthValue" line39="                message.fromSerialNumber = control.deviceSerialNumber()" line40="                message.value = health" line41="                message.send()" line42="                break" line43="        }" numlines="44"></mutation><next><block type="function_call" id="b`1+gCZ([!P.X{8uA|#q"><mutation name="gameFace" functionid="E!IR[#qJds5dOi}?t)LE"></mutation></block></next></block></statement></block></next></block></statement></block><block type="radio_on_buffer_drag" id="(r9*om#kN`2!e_:4Q(-_" x="3081" y="-36"><value name="HANDLER_DRAG_PARAM_receivedBuffer"><block type="argument_reporter_custom" id="di-vR5V!JS{J#*/Ni6PJ"><mutation duplicateondrag="true" typename="Buffer"></mutation><field name="VALUE">receivedBuffer</field></block></value><statement name="HANDLER"><block type="typescript_statement" id="??vJlrM%.iJk=}j.{b3+"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const incomingMessage = new Message(receivedBuffer)" numlines="1" declaredvars="incomingMessage"></mutation><next><block type="variables_set" id="qLnD}/4;=eR/C^|S?/`Y"><field name="VAR" id="5-51i%Dvu|Arw0$i-9vF">signal</field><value name="VALUE"><shadow type="math_number" id="oO2v3Tm{_dwuY8k]Y5eM"><field name="NUM">0</field></shadow><block type="radio_received_packet" id="#v}c_S6jD8}D8Ly_2j#E"><value name="type"><shadow type="radio_packet_property" id="|Efhr}tAtij9=`L4$v-d"><field name="note">RadioPacketProperty.SignalStrength</field></shadow></value></block></value><next><block type="controls_if" id="=dl6c|v78bXbxFP}A5V%"><mutation else="1"></mutation><value name="IF0"><shadow type="logic_boolean" id="wE.I;Ymqb8L1I9S^)lh~"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="NN}o:l%)4vi^/E9vq1HM"><field name="VAR" id="7E2$XX5#mcwz)g@5?Tpu">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="PUn}~KVXJ.72NOLr+dPP"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.PairRequest:" line2="                // register player" line3="                let n = players.length" line4="                player(incomingMessage.fromSerialNumber)" line5="                // show player number if changed" line6="                if (n != players.length) {" line7="                    basic.showNumber(players.length)" line8="                }" line9="                break" line10="            case MessageKind.HealthValue:" line11="                let s = player(incomingMessage.fromSerialNumber)" line12="                s.health = incomingMessage.value" line13="                // check if all infected" line14="                if (allDead())" line15="                    gameOver()" line16="                break" line17="        }" numlines="18"></mutation></block></statement><statement name="ELSE"><block type="typescript_statement" id="fr!o`!?Di)}=BANGQjP$"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.GameState:" line2="                // update game state" line3="                state = incomingMessage.value as GameState" line4="                break" line5="            case MessageKind.InitialInfect:" line6="                if (infectedBy &lt; 0 &amp;&amp;" line7="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line8="                    // infected by master" line9="                    infectedBy = 0 // infected my master" line10="                    infectedTime = input.runningTime()" line11="                    health = HealthState.Incubating" line12="                    serial.writeLine(`infected ${control.deviceSerialNumber()}`)" line13="                }" line14="                break" line15="            case MessageKind.HealthSet:" line16="                if (incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line17="                    const newHealth = incomingMessage.value" line18="                    if (health &lt; newHealth) {" line19="                        health = newHealth" line20="                    }" line21="                }" line22="                break" line23="            case MessageKind.PairConfirmation:" line24="                if (!paired &amp;&amp; state == GameState.Pairing &amp;&amp;" line25="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line26="                    // paired!" line27="                    serial.writeLine(`player paired ==&gt; ${control.deviceSerialNumber()}`)" line28="                    playerIcon = incomingMessage.value" line29="                    paired = true" line30="                }" line31="                break" line32="            case MessageKind.TransmitVirus:" line33="                if (state == GameState.Running) {" line34="                    if (health == HealthState.Healthy) {" line35="                        serial.writeLine(`signal: ${signal}`)" line36="                        if (signal &gt; RSSI &amp;&amp;" line37="                            randint(0, 100) &gt; TRANSMISSIONPROB) {" line38="                            infectedBy = incomingMessage.value" line39="                            infectedTime = input.runningTime()" line40="                            health = HealthState.Incubating" line41="                        }" line42="                    }" line43="                }" line44="                break" line45="            case MessageKind.HealthValue:" line46="                if (health != HealthState.Dead &amp;&amp; signal &gt; RSSI) {" line47="                    game.addScore(1)" line48="                }" line49="                break" line50="        }" numlines="51"></mutation></block></statement></block></next></block></next></block></statement></block><block type="function_definition" id="RA)XVG?)^sKRz]wHQB]*" x="4077" y="-84"><mutation name="player" functionid="dV8HVVK!7m*IFJhKo~,g"><arg name="id" id="402aldk8jyopxmzp1nqp" type="number"></arg></mutation><field name="function_name">player</field><comment pinned="false" h="80" w="160">get a player instance (creates one as needed)</comment><value name="402aldk8jyopxmzp1nqp"><block type="argument_reporter_number" id="w]wObr)KLFZWUb~8T+dn"><mutation duplicateondrag="true"></mutation><field name="VALUE">id</field></block></value><statement name="STACK"><block type="pxt_controls_for_of" id="Li0+f*/D2ztYKwGEceR7"><value name="VAR"><block type="variables_get_reporter" id="l#:OlFf}jA!Wl8Nt[iAK"><mutation duplicateondrag="true"></mutation><field name="VAR" id="5?:ML-mMK`2}oEY1hY3Y">p</field></block></value><value name="LIST"><block type="variables_get" id="=}P04)E;N.=9yuK?umAz"><field name="VAR" id="Y%twU3;a~2nGy?43v/bP">players</field></block></value><statement name="DO"><block type="controls_if" id="X0JuFk%EdX}c^c9UwdP4"><value name="IF0"><shadow type="logic_boolean" id="t8BA1XB2Nm46-/]$~aQe"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="%rbTNB48PW-l0,6#(ppX"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="0fphOHIbab7;w]IIJA_)"><field name="NUM">0</field></shadow><block type="typescript_expression" id="QBb-@H,.5iNYC=m[Pd^e"><field name="EXPRESSION">p.id</field></block></value><value name="B"><shadow type="math_number" id="rTD|UCh,j6::Avovo+w`"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="ylf{)WbmA/9}L]lFU[j."><field name="VALUE">id</field></block></value></block></value><statement name="DO0"><block type="function_return" id="jORj?0Qg]eR@NzqSZU#V"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number" id="aZlZF$yD23TWhb(JYpDB"><field name="NUM">0</field></shadow><block type="variables_get" id="-zsmPuDtjR#`A--[kLqO"><field name="VAR" id="5?:ML-mMK`2}oEY1hY3Y">p</field></block></value></block></statement></block></statement><next><block type="typescript_statement" id="J{Fi?33A05]WRZ5zOx_5"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let q = new Player()" numlines="1" declaredvars="q"></mutation><next><block type="typescript_statement" id="QDBA=r+}!^6`368X[bU9"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.id = id" numlines="1"></mutation><next><block type="typescript_statement" id="Q:4-2454iF$k?L.$s;5v"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.icon = (players.length + 1) % playerIcons.length" numlines="1"></mutation><next><block type="typescript_statement" id="6P7k+|VAfGS}=N|7B=oC"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.health = HealthState.Healthy" numlines="1"></mutation><next><block type="array_push" id="E6g;8.#7][gzO(ZDq9V="><value name="list"><block type="variables_get" id="axq}PfT|gCFP5M]=WW3}"><field name="VAR" id="Y%twU3;a~2nGy?43v/bP">players</field></block></value><value name="value"><block type="variables_get" id="!$hd:c}?`TjAX|gI04mc"><field name="VAR" id="QRjXENQ79G,Kr?1KNa~@">q</field></block></value><next><block type="serial_writeline" id="D*oNxoGgZc)q|jF1{?{|"><value name="text"><block type="typescript_expression" id="RvI=yvvx,OX*M@q4Ewi{"><field name="EXPRESSION">`player ==&gt; ${q.id}`</field></block></value><next><block type="function_return" id="ywavI5myZt1CVFqEr1(^"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number" id="jd_D%d9LMzZ%}-F$sSxg"><field name="NUM">0</field></shadow><block type="variables_get" id="}RUXb-`c6C/iyB}ejvx%"><field name="VAR" id="QRjXENQ79G,Kr?1KNa~@">q</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="}9i*joEH,lN7k!k2%W4M" x="4586" y="-36"><mutation name="gameFace" functionid="E!IR[#qJds5dOi}?t)LE"></mutation><field name="function_name">gameFace</field><statement name="STACK"><block type="typescript_statement" id="_k4^?_j~;1)Iue5awo#9"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="        case GameState.Stopped:" line2="            basic.showIcon(GameIcons.Pairing)" line3="            break" line4="        case GameState.Pairing:" line5="            if (playerIcon &gt; -1)" line6="                basic.showString(playerIcons[playerIcon])" line7="            else" line8="                basic.showIcon(paired ? GameIcons.Paired : GameIcons.Pairing, 1)" line9="            break" line10="        case GameState.Infecting:" line11="        case GameState.Running:" line12="            switch (health) {" line13="                case HealthState.Dead:" line14="                    basic.showIcon(GameIcons.Dead, 1)" line15="                    break" line16="                case HealthState.Sick:" line17="                    basic.showIcon(GameIcons.Sick, 1)" line18="                    break" line19="                default:" line20="                    basic.showIcon(GameIcons.Healthy, 1)" line21="                    break" line22="            }" line23="            break" line24="        case GameState.Over:" line25="            // show id" line26="            basic.showString(playerIcons[playerIcon])" line27="            basic.pause(2000)" line28="            // show health" line29="            switch (health) {" line30="                case HealthState.Dead:" line31="                    basic.showIcon(GameIcons.Dead, 2000)" line32="                    break" line33="                case HealthState.Sick:" line34="                    basic.showIcon(GameIcons.Sick, 2000)" line35="                    break" line36="                case HealthState.Incubating:" line37="                    basic.showIcon(GameIcons.Incubating, 2000)" line38="                    break" line39="                default:" line40="                    basic.showIcon(GameIcons.Healthy, 2000)" line41="                    break" line42="            }" line43="            // show how infected" line44="            if (infectedBy &gt; -1) {" line45="                basic.showString(&quot; INFECTED BY&quot;)" line46="                basic.showString(playerIcons[infectedBy])" line47="                basic.pause(2000)" line48="            } else {" line49="                basic.showString(&quot; PATIENT ZERO&quot;)" line50="                basic.pause(2000)" line51="            }" line52="            // show score" line53="            game.showScore()" line54="            basic.pause(1000)" line55="            break" line56="    }" numlines="57"></mutation></block></statement></block><block type="function_definition" id="mDhy4woS66T|:/%ifVeg" x="5431" y="-36"><mutation name="allDead" functionid="}c5QAbo(!EBP_/jm5|]/"></mutation><field name="function_name">allDead</field><statement name="STACK"><block type="pxt_controls_for_of" id="Ei!us1TiU8pHtlyn?)qG"><value name="VAR"><block type="variables_get_reporter" id="oN^?%YYmpU?wkEZSuPC)"><mutation duplicateondrag="true"></mutation><field name="VAR" id="Sg^q;5I=%AI$bJ|Z0JEj">r</field></block></value><value name="LIST"><block type="variables_get" id="]|$:sMERAH%ck(2u7iEr"><field name="VAR" id="Y%twU3;a~2nGy?43v/bP">players</field></block></value><statement name="DO"><block type="controls_if" id="9Hk)Q$r3o?!SYejMArf0"><value name="IF0"><shadow type="logic_boolean" id="|C=(QvQU|3-EHj1yKv$p"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="X;aB[W+3i![[*I0XSS_G"><field name="OP">NEQ</field><value name="A"><shadow type="math_number" id="caCi`zo]G`]ZNPI7:Ih%"><field name="NUM">0</field></shadow><block type="typescript_expression" id="|5[WGjSxrh={i`Pu6WFk"><field name="EXPRESSION">r.health</field></block></value><value name="B"><shadow type="math_number" id="]SBg#uiJz9Gri0WV3:bR"><field name="NUM">0</field></shadow><block type="typescript_expression" id="LY^_iCYCo!3k%+8n~!rg"><field name="EXPRESSION">HealthState.Dead</field></block></value></block></value><statement name="DO0"><block type="function_return" id="k$Kla4i2reyydYItguoj"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number" id="77oa|`gM:pt/d9Ayg-hX"><field name="NUM">0</field></shadow><block type="logic_boolean" id="fnUe~|,9;^UMc$l#+f(R"><field name="BOOL">FALSE</field></block></value></block></statement></block></statement><next><block type="function_return" id="S[u{fl-t1QWQ:${(xtAw"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number" id="R#n*?eSWv70R8Je/[i%M"><field name="NUM">0</field></shadow><block type="logic_boolean" id="W2uZuti8fo}#or7hGSzP"><field name="BOOL">TRUE</field></block></value></block></next></block></statement></block><block type="function_definition" id="MicOEYE}j^M1NpOzb,_:" x="-16" y="4195"><mutation name="gameOver" functionid="#nyG=ve56/eZf59:S$W-"></mutation><field name="function_name">gameOver</field><statement name="STACK"><block type="typescript_statement" id="9pFHH42={bCI#Y$f|*H6"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Over" numlines="1"></mutation><next><block type="controls_if" id="b|mhMjd?Ry+q;w0.6#5="><value name="IF0"><shadow type="logic_boolean" id="+s~~G3.rR?}5kT#.B[?x"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="6.C{KX|JE5RdEOv7k6m3"><field name="VAR" id="Nmd$=#8(30q=J])M0zLq">patientZero</field></block></value><statement name="DO0"><block type="typescript_statement" id="c-RS=-gUuiv.;v4o*$lo"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="patientZero.show()" numlines="1"></mutation></block></statement></block></next></block></statement></block></xml>